cmake_minimum_required(VERSION 3.15)
project(MLIR_Tutorial LANGUAGES C CXX)
if(POLICY CMP0116)
    cmake_policy(SET CMP0116 NEW)
endif()
if(POLICY CMP0114)
    cmake_policy(SET CMP0114 NEW)
endif()
set(CMAKE_C_STANDARD 17)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_INSTALL_PREFIX "${CMAKE_CURRENT_SOURCE_DIR}/install")
# relase version is not check
set(CMAKE_BUILD_TYPE "Debug" CACHE STRING " " FORCE)
add_compile_options(-fPIC)
add_compile_options(-fno-rtti)
add_subdirectory(third_party)
list(APPEND LLVM_CMAKE_DIR "${CMAKE_CURRENT_BINARY_DIR}/third_party/llvm-project/llvm/lib/cmake/llvm")
list(APPEND MLIR_CMAKE_DIR "${CMAKE_CURRENT_BINARY_DIR}/lib/cmake/mlir")
list(APPEND CMAKE_MODULE_PATH ${MLIR_CMAKE_DIR})
list(APPEND CMAKE_MODULE_PATH ${LLVM_CMAKE_DIR})
include(LLVMConfig)
include(MLIRConfig)
include(TableGen)
include(AddLLVM)
include(AddMLIR)
include_directories(${LLVM_INCLUDE_DIRS})
include_directories(${MLIR_INCLUDE_DIRS})
get_property(dialect_libs GLOBAL PROPERTY MLIR_DIALECT_LIBS)
get_property(conversion_libs GLOBAL PROPERTY MLIR_CONVERSION_LIBS)
get_property(extension_libs GLOBAL PROPERTY MLIR_EXTENSION_LIBS)
set(NS_MLIR_TRANSFORM_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}")
set(NS_MLIR_TRANSFORM_INCLUDE "${CMAKE_CURRENT_SOURCE_DIR}/north_star_include.mlir")
add_subdirectory(2-define_dialect)
add_subdirectory(3-define_type)
add_subdirectory(4-define_attribute)
add_subdirectory(5-define_operation)
add_subdirectory(6-define_interface)
add_subdirectory(7-ir_struct)
add_subdirectory(8-define_pass)
add_subdirectory(9-rewrite_pattern)
add_subdirectory(10-mlir_opt-and-debug)
add_subdirectory(11-lit_for_test)
add_subdirectory(12-operation_lowing_pass)
add_subdirectory(13-pass_manager)
add_subdirectory(14-fold_and_canonicalization)
add_subdirectory(15-lowing_to_llvm)
